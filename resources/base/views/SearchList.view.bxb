result-view{
	match{
		SearchResult(this)
	}
  message{
		if(size(this)>1){
		  template-macro (SearchResult_List){
				param (result){
					expression (this)
				}
			}
    }
		else-if(size(this)==1){
			template-macro (SearchResult_Detail){
        param (result){
					expression (this)
				}
      }
		}
	}
	render {
    if(size(this) > 1) { // a map to display multiple destinations with my location
      layout {
        section {
          content {
            if (this[0].action == 'Shelter') {
              single-line {
                text {
                  color(Red)
                  style(Detail_M)
                  value("(동물보호상담센터 ☎ 1577-0954)")
                }
              }
            }
            
            map-card {
              aspect-ratio(16:9)
              markers {
                marker { // my location
                  geo(this[0].myLocation)
                  height(20)
                  width(20)
                  icon("/images/user_32.png")
                }
                marker { // search location
                  geo(this[0].searchLocation)
                  height(25)
                  width(25)
                  icon("/images/target_32.png")
                }
              for-each (this){ // result locations
                 as (item){
                  marker {
                    geo(item.point)
                    icon("/images/red-marker_24.png")
							      width (15)
							      height (15)
                  }
                }
              }
            } 
            title-area {
              halign(Center)
                slot1 {
                  paragraph {
                    style(Detail_L)
                    value()
                  }
                }
              }
            } // end of map-card
            
            for-each (this){ // result list
              as (item){
                compound-card {
                  content {
                    single-line {
                      image {
                        style(Detail_M)
                        url("[#{value(item.icon)}]")
                      }
                      spacer {size(Medium)}
                      text {
                        style(Detail_M_Soft)
                        value("[#{value(item.category)}]")
                      }
                    }
                    paragraph {
                      style(Title_XS)
                      value("[#{value(item.name)}]")
                    }
                    if (exists (item.distanceLocation) && item.distanceLocation != '') {
                      single-line {
                        text {
                          color(Blue)
                          style(Detail_M)
                          value("[#{value(item.inputLocation)}] 중심에서 [#{value(item.distanceLocation)}]km 떨어져 있습니다.")
                        }
                      }
                    }
                    if (exists (item.distance) && item.distance != '') {
                      single-line {
                        text {
                          color(Green)
                          style(Detail_M)
                          value("현재 위치에서 [#{value(item.distance)}]km 떨어져 있습니다.")
                        }
                      }
                    }
                    if (exists (item.address)) {
                      paragraph {
                        style(Detail_M)
                        value("[#{value(item.address)}]")
                      }
                    }
                    else {
                      paragraph {
                        style(Detail_M_Soft)
                        value("[#{value(item.addressOld)}]")
                      }
                    }
                  }
                  on-click {
                    view-for (item)
                  }
                }
              }
            }
          }
        }
      }
	  }
    else-if(size(this)==1){ // else if result list has only 1 item => show detail view
			layout-macro (Search-Detail){
				param (searchResult){
					expression (this)
				}
			}
	  }

	} // render

  conversation-drivers {
    if (this[0].action == 'Vet') {
      conversation-driver {
        template("동물회관에서 반려동물 응급처치 알려줘")
      }
    }
    else-if (this[0].action == 'Shelter') {
      conversation-driver {
        template("동물회관에서 유실·유기동물 입양·습득·분실 알려줘")
      }
    }
    else-if (this[0].action == 'Play' || this[0].action == 'Rest' ) {
      conversation-driver {
        template("동물회관에서 반려동물과 외출하는 법 알려줘")
      }
    }
  }

}